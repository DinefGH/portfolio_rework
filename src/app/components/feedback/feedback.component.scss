.feedbackContainer {
    position: relative;
    background-size: cover;
    background-attachment: fixed;
    color: white;
    height: 50vh;
    overflow: hidden;
}


.feedbackContainer::before {
    content:'';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 50vh;
    background-color: rgba(28, 28, 28,);    
    z-index: -1;
}


.feedbackMainContainer {
    width: 100%;
    height: 50vh;
    display: flex;
    justify-content: center;
    flex-direction: column;
    align-items: center;
    box-shadow:
    inset -5px 0 5px -5px rgba(0, 0, 0, 0.3),
    inset 5px 0 5px -5px rgba(0, 0, 0, 0.3);
}





.feedbackHeadline {
    font-size: calc(1.175rem + 1.2vw) !important;
    margin-bottom: 32px;
}


.feedbackContent {
    width: min(860px, 50vw);
    height: 260px;
    border: 1px solid;
    border-radius: 2rem;
    margin: 32px;
    padding: 0px 32px 0px 32px;
    background: linear-gradient(45deg, #2c413c 50%, #39514d 100%);
    transition: transform 0.5s ease-in-out;
    display: flex;
    justify-content: space-evenly;
    align-items: center;
    flex-direction: column;
}


.feedbackLineAuthorContainer {
    display: flex;
    width: 100%;
    align-items: center;
}

.straightLineFeedback {
    border: 1px solid;
    width: 80%;
    height: 1px;
}


.feedbackContentContainer {
    display: flex;

}


.feedbackSwitcher {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-top: 16px;
}


.feedbackSwitcherPoint {
    height: 8px;
    width: 8px;
    border-radius: 50%;
    display: block;
    margin-left: 16px;
    margin-right: 16px;
    border: 2px solid;
    transition: transform 0.3s;

}


.feedbackAuthor {
    width: 20vw;
    display: flex;
    text-wrap: unset;
    justify-content: flex-end;
}


.feedbackSwitcherLeft {
    margin-right: 32px;
    cursor: pointer;
}


.feedbackSwitcherRight {
    margin-left: 32px;
    cursor: pointer;
}


.focusedFeedback {
    transform: scale(1.1);
    background-color: #d1e7dd;
    z-index: 1;
  }
  
  /* Styles for previous and next items */
  .previousFeedback,
  .nextFeedback {
    opacity: 0.2;
  }


  .feedbackWrapper {
    display: flex;
    transition: transform 0.5s ease-in-out;
  }